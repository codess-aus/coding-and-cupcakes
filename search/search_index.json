{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"\ud83c\udf70 Coding &amp; Cupcakes","text":"<p>Welcome to your sweet journey into AI-assisted coding! This workshop is all about using GitHub Copilot as your coach, teacher, and pair programmer\u2014not your replacement.</p> <p>Let\u2019s bake some code together! \ud83e\uddc1</p> <p>Video created with sora in Azure AI Foundry Video Playground</p>"},{"location":"copilot-enabler/","title":"\ud83d\ude80 Copilot as an Enabler","text":"<p>explore how GitHub CopWelcome to the final frosting layer of your Coding &amp; Cupcakes journey! \ud83e\uddc1 In this section, we\u2019llilot can enable you to write cleaner, smarter, and more maintainable code\u2014without taking over the kitchen.</p>"},{"location":"copilot-enabler/#what-does-enabler-mean","title":"\ud83c\udf70 What does \u201cEnabler\u201d mean?","text":"<p>An enabler helps you do more with what you already know. Copilot can: - Refactor messy code - Suggest improvements - Write tests - Add helpful comments - Help you debug</p> <p>But remember: you\u2019re still the baker. Copilot just hands you better tools.</p>"},{"location":"copilot-enabler/#refactoring-with-copilot","title":"\ud83e\uddc1 Refactoring with Copilot","text":"<p>Let\u2019s say you\u2019ve written a function that works, but it\u2019s a bit messy:</p> <pre><code>function bakeCupcakes(flavor, quantity) {\n  if (quantity &gt; 0) {\n    console.log(\"Baking \" + quantity + \" \" + flavor + \" cupcakes\");\n  } else {\n    console.log(\"No cupcakes to bake\");\n  }\n}\n</code></pre> <p>Now prompt Copilot:</p> <pre><code>// Refactor this function to use template literals and handle edge cases\n</code></pre> <p>Copilot might suggest:</p> <pre><code>function bakeCupcakes(flavor, quantity) {\n  if (quantity &gt; 0) {\n    console.log(`Baking ${quantity} ${flavor} cupcakes`);\n  } else {\n    console.log(\"Please enter a valid quantity of cupcakes to bake.\");\n  }\n}\n</code></pre> <p>You\u2019ve just leveled up your code with Copilot\u2019s help!</p>"},{"location":"copilot-enabler/#writing-tests-with-copilot","title":"\ud83c\udf69 Writing Tests with Copilot","text":"<p>Testing is a skill many coders avoid\u2014but Copilot makes it easier.</p>"},{"location":"copilot-enabler/#example","title":"Example:","text":"<pre><code>// Write a test for the bakeCupcakes function\n</code></pre> <p>Copilot might generate:</p> <pre><code>test('bakeCupcakes logs correct message', () =&gt; {\n  console.log = jest.fn();\n  bakeCupcakes('Vanilla', 3);\n  expect(console.log).toHaveBeenCalledWith('Baking 3 Vanilla cupcakes');\n});\n</code></pre> <p>Now you\u2019ve got a test\u2014and a better understanding of how to write one.</p>"},{"location":"copilot-enabler/#adding-comments-and-documentation","title":"\ud83c\udf6c Adding Comments and Documentation","text":"<p>Copilot can help you document your code clearly.</p>"},{"location":"copilot-enabler/#example_1","title":"Example:","text":"<pre><code>// Add JSDoc comments to this function\nfunction rateCupcake(flavor, rating) {\n  return `${flavor} gets a ${rating}/5!`;\n}\n</code></pre> <p>Copilot might suggest:</p> <pre><code>/**\n * Rates a cupcake flavor.\n * @param {string} flavor - The flavor of the cupcake.\n * @param {number} rating - The rating from 1 to 5.\n * @returns {string} A formatted rating message.\n */\nfunction rateCupcake(flavor, rating) {\n  return `${flavor} gets a ${rating}/5!`;\n}\n</code></pre> <p>Now your code is easier to read and maintain!</p>"},{"location":"copilot-enabler/#debugging-with-copilot","title":"\ud83c\udf82 Debugging with Copilot","text":"<p>Stuck on a bug? Copilot can help you spot the issue.</p>"},{"location":"copilot-enabler/#example_2","title":"Example:","text":"<pre><code>// Why is this function returning undefined?\nfunction getCupcake(flavor) {\n  const cupcakes = { Vanilla: 5, Chocolate: 3 };\n  cupcakes.flavor;\n}\n</code></pre> <p>Copilot might suggest:</p> <pre><code>// You need to use bracket notation to access dynamic keys\nreturn cupcakes[flavor];\n</code></pre> <p>Boom! Bug fixed, lesson learned.</p>"},{"location":"copilot-enabler/#final-thought","title":"\ud83d\udc96 Final Thought","text":"<p>Copilot is like a cupcake decorator who helps you make your creations shine. It doesn\u2019t bake for you\u2014but it helps you refine, polish, and perfect your code.</p> <p>Use it to: - Improve readability - Learn best practices - Write cleaner code - Build confidence</p> <p>You\u2019re not just coding\u2014you\u2019re crafting something sweet and smart. \ud83c\udf70 Keep experimenting, keep improving, and keep baking brilliance! \ud83e\uddc1</p>"},{"location":"copilot-pair/","title":"\ud83e\udd1d Copilot as a Pair Programmer","text":"<p>you brainstorm, debug, and build smarter.</p> <p>Welcome to the coding kitchen! \ud83c\udf73 In this section, we\u2019ll explore how GitHub Copilot can act as your pair programmer\u2014a supportive coding buddy who helps---</p>"},{"location":"copilot-pair/#what-is-pair-programming","title":"\ud83e\uddc1 What is Pair Programming?","text":"<p>Pair programming is a technique where two developers work together: - One writes the code (the driver) - One reviews, suggests, and guides (the navigator)</p> <p>With Copilot, you\u2019re always the driver. Copilot is your navigator\u2014offering ideas, catching mistakes, and helping you stay focused.</p>"},{"location":"copilot-pair/#copilot-is-your-coding-buddy","title":"\ud83c\udf70 Copilot is Your Coding Buddy","text":"<p>Copilot shines when you: - Know what you want to build - Break the task into steps - Use comments to guide its suggestions</p> <p>It\u2019s like baking cupcakes with a friend who hands you the ingredients and reads the recipe aloud\u2014but you still do the mixing and decorating.</p>"},{"location":"copilot-pair/#example-build-a-cupcake-rating-form","title":"\ud83c\udf6c Example: Build a Cupcake Rating Form","text":"<p>Let\u2019s say you want to build a simple form to rate cupcakes. Start with a clear comment:</p> <pre><code>&lt;!-- Create a form to rate cupcakes from 1 to 5 --&gt;\n&lt;form&gt;\n  &lt;label for=\"flavor\"&gt;Cupcake Flavor:&lt;/label&gt;\n  &lt;input type=\"text\" id=\"flavor\" name=\"flavor\" /&gt;\n\n  &lt;label for=\"rating\"&gt;Rating (1-5):&lt;/label&gt;\n  &lt;input type=\"number\" id=\"rating\" name=\"rating\" min=\"1\" max=\"5\" /&gt;\n\n  &lt;button type=\"submit\"&gt;Submit&lt;/button&gt;\n&lt;/form&gt;\n</code></pre> <p>Now switch to JavaScript and guide Copilot:</p> <pre><code>// Add validation for the rating input\n</code></pre> <p>Copilot will suggest code to check if the rating is between 1 and 5. You can review it, tweak it, and learn from it.</p>"},{"location":"copilot-pair/#example-brainstorming-with-copilot","title":"\ud83c\udf69 Example: Brainstorming with Copilot","text":"<p>Let\u2019s say you\u2019re not sure how to store the ratings. Try prompting Copilot:</p> <pre><code>// Store cupcake ratings in an array of objects\n</code></pre> <p>Copilot might suggest:</p> <pre><code>const ratings = [\n  { flavor: \"Vanilla\", rating: 5 },\n  { flavor: \"Chocolate\", rating: 4 }\n];\n</code></pre> <p>You can then ask:</p> <pre><code>// Add a function to calculate the average rating\n</code></pre> <p>This turns Copilot into a collaborator, helping you think through the problem.</p>"},{"location":"copilot-pair/#tips-for-effective-pairing","title":"\ud83c\udf82 Tips for Effective Pairing","text":"<ul> <li>\ud83c\udf70 Be intentional: Use comments to describe what you want.</li> <li>\ud83e\uddc1 Stay in control: Don\u2019t accept suggestions blindly\u2014review and refine.</li> <li>\ud83c\udf69 Break tasks down: Smaller steps = better suggestions.</li> <li>\ud83c\udf6c Talk to Copilot: Treat it like a teammate. Ask questions, give feedback.</li> </ul>"},{"location":"copilot-pair/#final-thought","title":"\ud83d\udc96 Final Thought","text":"<p>Pair programming with Copilot is like baking with a buddy who knows every recipe\u2014but still lets you decorate the cupcakes your way. \ud83e\uddc1</p> <p>Use Copilot to: - Spark ideas - Catch bugs - Learn new patterns</p> <p>But always remember: you\u2019re the coder. Copilot is just here to make the journey sweeter. \ud83c\udf6c</p>"},{"location":"copilot-teacher/","title":"\ud83d\udc69\u200d\ud83c\udfeb Copilot as a Teacher","text":"<p>Welcome to the classroom of code\u2014with cupcakes! \ud83e\uddc1  </p>"},{"location":"copilot-teacher/#in-this-section-well-explore-how-github-copilot-can-be-your-coding-teacher-helping-you-learn-new-concepts-understand-syntax-and-build-confidence-in-your-skills","title":"\ud83d\udc69In this section, we\u2019ll explore how GitHub Copilot can be your coding teacher, helping you learn new concepts, understand syntax, and build confidence in your skills.","text":""},{"location":"copilot-teacher/#what-does-it-mean-for-copilot-to-be-a-teacher","title":"\ud83c\udf70 What does it mean for Copilot to be a teacher?","text":"<p>Think of Copilot like a friendly tutor who: - Explains things when you ask - Shows examples when you're stuck - Offers suggestions that help you learn\u2014not skip steps</p> <p>Copilot is great at responding to curiosity. The more questions you ask, the more you learn.</p>"},{"location":"copilot-teacher/#learning-through-comments","title":"\ud83e\uddc1 Learning Through Comments","text":"<p>One of the best ways to use Copilot as a teacher is by writing comments that ask questions or describe what you want to learn.</p>"},{"location":"copilot-teacher/#example-1-ask-for-an-explanation","title":"Example 1: Ask for an explanation","text":"<pre><code># What does this function do?\ndef bake(cupcakes):\n    return sorted(cupcakes)\n</code></pre> <p>Copilot will often respond with a comment or rewrite that explains the logic. You can also ask:</p> <pre><code># Explain recursion with a simple example\n</code></pre> <p>This prompts Copilot to generate a teaching snippet\u2014like a mini tutorial!</p>"},{"location":"copilot-teacher/#learn-concepts-in-context","title":"\ud83c\udf6c Learn Concepts in Context","text":"<p>Use Copilot to explore tricky topics like:</p> <ul> <li> <p>Regular Expressions <code>js   // Show me a regex to validate an email address</code></p> </li> <li> <p>Recursion <code>python   # Explain recursion with a factorial function</code></p> </li> <li> <p>Sorting Algorithms <code>js   // Show me how bubble sort works</code></p> </li> </ul> <p>Copilot will generate code and often include comments that explain each step. You can then tweak the code, run it, and see how it behaves.</p>"},{"location":"copilot-teacher/#ask-why-and-how","title":"\ud83c\udf69 Ask \u201cWhy\u201d and \u201cHow\u201d","text":"<p>Copilot is great at showing how something works\u2014but you can push it further by asking why.</p>"},{"location":"copilot-teacher/#example","title":"Example:","text":"<pre><code>// Why is this function using map instead of forEach?\n</code></pre> <p>This encourages Copilot to explain the difference, helping you understand intent and design choices.</p>"},{"location":"copilot-teacher/#practice-with-mini-challenges","title":"\ud83e\uddc1 Practice with Mini Challenges","text":"<p>Try giving Copilot a challenge and see how it responds. Then review and improve the code.</p>"},{"location":"copilot-teacher/#example_1","title":"Example:","text":"<pre><code># Write a function that counts how many cupcakes have sprinkles\n</code></pre> <p>Copilot will generate a function. You can: - Add edge cases - Write tests - Refactor it - Ask Copilot to explain each line</p> <p>This turns Copilot into a learning loop\u2014you ask, it answers, you improve.</p>"},{"location":"copilot-teacher/#cupcake-coding-tips-for-learning","title":"\ud83c\udf82 Cupcake Coding Tips for Learning","text":"<ul> <li>\ud83c\udf70 Be specific: Ask clear questions in comments.</li> <li>\ud83e\uddc1 Review suggestions: Don\u2019t just accept\u2014read and understand.</li> <li>\ud83c\udf69 Tweak examples: Change inputs, add conditions, break things!</li> <li>\ud83c\udf6c Ask for alternatives: \u201cShow me another way to do this.\u201d</li> </ul>"},{"location":"copilot-teacher/#final-thought","title":"\ud83d\udc96 Final Thought","text":"<p>Copilot is more than a code generator\u2014it\u2019s a learning partner. Use it to explore, experiment, and expand your coding skills.</p> <p>You\u2019re not just baking cupcakes\u2014you\u2019re mastering the recipe! \ud83e\uddc1 Keep asking questions, keep growing, and keep coding with curiosity. \ud83c\udf1f</p>"},{"location":"mindset/","title":"\ud83e\udde0 The Mindset Shift","text":"<p>Welcome to the most important ingredient in your Coding &amp; Cupcakes journey: your mindset! \ud83c\udf70</p> <p>GitHub Copilot is a powerful tool\u2014but like any good kitchen assistant, it works best when you\u2019re in charge. This section is all about helping you shift from passive coding to active learning.</p>"},{"location":"mindset/#copilot-is-not-your-baker","title":"\ud83c\udf69 Copilot is NOT your baker","text":"<p>Let\u2019s get this straight:</p> <p>\u274c Copilot is not here to bake the cupcakes for you. \u2705 Copilot is here to help you bake better cupcakes.</p> <p>Think of it like this: - You bring the creativity, curiosity, and control. - Copilot brings suggestions, explanations, and shortcuts.</p>"},{"location":"mindset/#what-is-vibe-coding-and-why-avoid-it","title":"\ud83e\uddc1 What is \u201cVibe Coding\u201d? And why avoid it?","text":"<p>Vibe Coding is when you let Copilot write code without understanding it. You vibe with the suggestions, accept them blindly, and hope for the best.</p> <p>\ud83d\udeab This leads to: - Code you can\u2019t debug - Features you can\u2019t explain - Skills you don\u2019t develop</p> <p>Instead, we want to learn actively.</p>"},{"location":"mindset/#examples-of-healthy-copilot-use","title":"\ud83c\udf6c Examples of Healthy Copilot Use","text":""},{"location":"mindset/#1-ask-copilot-to-explain-code","title":"1. Ask Copilot to explain code","text":"<pre><code># What does this function do?\ndef bake(cupcakes):\n    return sorted(cupcakes)\n</code></pre>"},{"location":"mindset/#demo-5-ways-to-write-this-function","title":"Demo: 5 Ways to write this function","text":"Your browser does not support the video tag."},{"location":"welcome/","title":"\ud83e\uddc1 Welcome!","text":"<p>Thanks for joining She Codes Australia for this deliciously fun workshop! Today, we\u2019ll explore how to use GitHub Copilot to become a better coder\u2014not a lazier one.</p> <p>\u201cCopilot is your sous-chef, not your baker.\u201d \ud83d\udc69\u200d\ud83c\udf73</p>    Your browser does not support the video tag.  <p>Video created with sora in Azure AI Foundry Video Playground</p>"},{"location":"wrapup/","title":"\ud83c\udf89 Wrap-Up &amp; Resources","text":"<p>You did it! \ud83e\uddc1</p>"},{"location":"wrapup/#key-takeaways","title":"Key Takeaways:","text":"<ul> <li>You\u2019re the baker. Copilot is your sous-chef.</li> <li>Use it to learn, not to cheat.</li> <li>Ask questions. Stay curious.</li> </ul>"},{"location":"wrapup/#resources","title":"Resources:","text":"<ul> <li>GitHub Copilot Docs g/</li> <li>[She Codes Australia](https://she</li> </ul>"}]}